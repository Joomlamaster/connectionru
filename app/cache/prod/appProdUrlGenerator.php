<?php

use Symfony\Component\Routing\RequestContext;
use Symfony\Component\Routing\Exception\RouteNotFoundException;
use Psr\Log\LoggerInterface;

/**
 * appProdUrlGenerator
 *
 * This class has been auto-generated
 * by the Symfony Routing Component.
 */
class appProdUrlGenerator extends Symfony\Component\Routing\Generator\UrlGenerator
{
    private static $declaredRoutes = array(
        'admin_index' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Connection\\AdminBundle\\Controller\\DefaultController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_contact_us' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Connection\\AdminBundle\\Controller\\DefaultController::contactAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/contact-us',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_event_index' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Connection\\AdminBundle\\Controller\\EventController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/events',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_event_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Connection\\AdminBundle\\Controller\\EventController::deleteAction',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/admin/event/delete',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_event_comments_view' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Connection\\AdminBundle\\Controller\\EventController::commentsViewAction',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/admin/event/comments',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_event_comment_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Connection\\AdminBundle\\Controller\\EventController::deleteCommentAction',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/admin/event/comment/delete',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_settings_background' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Connection\\AdminBundle\\Controller\\SettingsController::backgroundAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/settings/background',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_settings_background_set' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Connection\\AdminBundle\\Controller\\SettingsController::backgroundSetAction',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/admin/settings/background/set',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_settings_background_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Connection\\AdminBundle\\Controller\\SettingsController::backgroundDeleteAction',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/admin/settings/background/delete',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_user_index' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Connection\\AdminBundle\\Controller\\UserController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/users',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_user_ban' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Connection\\AdminBundle\\Controller\\UserController::banAction',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/admin/user/ban',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_user_unban' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Connection\\AdminBundle\\Controller\\UserController::unBanAction',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/admin/user/unban',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_user_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Connection\\AdminBundle\\Controller\\UserController::deleteAction',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/admin/user/delete',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'message_inbox' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Connection\\MessageBundle\\Controller\\MessageController::inboxAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/message/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'message_sent' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Connection\\MessageBundle\\Controller\\MessageController::sentAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/message/sent',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'message_deleted' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Connection\\MessageBundle\\Controller\\MessageController::deletedAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/message/deleted',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'message_view' => array (  0 =>   array (    0 => 'threadId',  ),  1 =>   array (    '_controller' => 'Connection\\MessageBundle\\Controller\\MessageController::threadAction',  ),  2 =>   array (    'threadId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'threadId',    ),    1 =>     array (      0 => 'text',      1 => '/message',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'message_new' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Connection\\MessageBundle\\Controller\\MessageController::newThreadUserAction',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/message/new',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ajax_message_new' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Connection\\MessageBundle\\Controller\\MessageController::newThreadUserAjaxAction',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/message/ajax/new',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'connection_homepage' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Connection\\WebBundle\\Controller\\FrontendController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'connection_about' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Connection\\WebBundle\\Controller\\FrontendController::aboutAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/about-us',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'connection_privacy' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Connection\\WebBundle\\Controller\\FrontendController::privacyAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/privacy',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'connection_contact' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Connection\\WebBundle\\Controller\\FrontendController::contactAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/contact-us',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'connection_tell_a_friend' => array (  0 =>   array (  ),  1 =>   array (    'link' => false,    '_controller' => 'Connection\\WebBundle\\Controller\\FrontendController::tellAFriendEndPointAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/tell-a-friend',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'event_category' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Connection\\EventBundle\\Controller\\CategoryController::indexAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/event/category/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'event_category_create' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Connection\\EventBundle\\Controller\\CategoryController::createAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/event/category/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'event_category_new' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Connection\\EventBundle\\Controller\\CategoryController::newAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/event/category/new',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'event_category_show' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Connection\\EventBundle\\Controller\\CategoryController::showAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/event/category',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'event_category_edit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Connection\\EventBundle\\Controller\\CategoryController::editAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/event/category',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'event_category_update' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Connection\\EventBundle\\Controller\\CategoryController::updateAction',  ),  2 =>   array (    '_method' => 'PUT',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/event/category',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'event_category_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Connection\\EventBundle\\Controller\\CategoryController::deleteAction',  ),  2 =>   array (    '_method' => 'DELETE',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/event/category',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'add_event_comment' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Connection\\EventBundle\\Controller\\CommentController::viewAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/event/comment/add',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'view_event' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Connection\\EventBundle\\Controller\\EventController::viewAction',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/event',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'view_upcoming_events' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Connection\\EventBundle\\Controller\\EventController::viewUpcomingAction',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/event/upcoming',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'event_manage' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    'id' => NULL,    '_controller' => 'Connection\\EventBundle\\Controller\\EventController::manageAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/event/manage',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'event_subscribe' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Connection\\EventBundle\\Controller\\EventController::subscribeAction',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/event/subscribe',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'event_unsubscribe' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Connection\\EventBundle\\Controller\\EventController::unSubscribeAction',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/event/unsubscribe',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'event_interested' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Connection\\EventBundle\\Controller\\EventController::interestedAction',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/event/interested',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'event_not_interested' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Connection\\EventBundle\\Controller\\EventController::notInterestedAction',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/event/not-interested',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'event_ajax_going' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Connection\\EventBundle\\Controller\\EventController::goingAjaxAction',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/event/ajax-going',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'event_ajax_interested' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Connection\\EventBundle\\Controller\\EventController::interestedAjaxAction',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/event/ajax-interested',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'remove_profile_event' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Connection\\EventBundle\\Controller\\EventController::removeAction',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/event/remove',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'event_search' => array (  0 =>   array (    0 => 'page',  ),  1 =>   array (    'page' => 1,    '_controller' => 'Connection\\EventBundle\\Controller\\SearchController::searchAction',  ),  2 =>   array (    'page' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'page',    ),    1 =>     array (      0 => 'text',      1 => '/event/search',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'facebook_login' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Connection\\UserBundle\\Controller\\FacebookController::facebookLoginAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/user/facebook/login',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'profile_image' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Connection\\UserBundle\\Controller\\ImageController::viewAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/user/image/profile',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'jcrop_form' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Connection\\UserBundle\\Controller\\ImageController::jcropFormAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/user/image/jcrop/from',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'remove_profile_image' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Connection\\UserBundle\\Controller\\ImageController::removeAction',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/user/image',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'update_profile_image' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Connection\\UserBundle\\Controller\\ImageController::updateProfileImageAction',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/user/image/profile/update-image',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'user_message_hi' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Connection\\UserBundle\\Controller\\MessageController::removeFavoriteUserAction',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/user/message/hi',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'view_profile' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Connection\\UserBundle\\Controller\\ProfileController::viewAction',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/user/profile',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'edit_user_profile' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Connection\\UserBundle\\Controller\\ProfileController::editAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/user/profile/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'edit_user_profile_edit' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Connection\\UserBundle\\Controller\\ProfileController::editAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/user/profile/edit',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'link_profile' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Connection\\UserBundle\\Controller\\ProfileController::linkProfileAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/user/profile/link-profile',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_extended_register' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Connection\\UserBundle\\Controller\\RegistrationController::registerExtendedAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/user/extended-register',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_quick_register' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Connection\\UserBundle\\Controller\\RegistrationController::registerQuickAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/user/quick-register',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'user_search_quick_form' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Connection\\UserBundle\\Controller\\SearchController::quickAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/user/search/quick-form',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'user_search' => array (  0 =>   array (    0 => 'page',  ),  1 =>   array (    'page' => 1,    '_controller' => 'Connection\\UserBundle\\Controller\\SearchController::searchResultAction',  ),  2 =>   array (    'page' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'page',    ),    1 =>     array (      0 => 'text',      1 => '/user/search',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'twitter_login' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Connection\\UserBundle\\Controller\\TwitterController::twitterLoginAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/user/twitter/login',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'twitter_add_email' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Connection\\UserBundle\\Controller\\TwitterController::addEmailAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/user/twitter/add-email',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'favorite_user_add' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Connection\\UserBundle\\Controller\\UserController::addFavoriteUserAction',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/user/favorite/add',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'favorite_user_remove' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Connection\\UserBundle\\Controller\\UserController::removeFavoriteUserAction',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/user/favorite/remove',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'profile_favorite_user_remove' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Connection\\UserBundle\\Controller\\UserController::removeProfileFavoriteUserAction',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/user/favorite/remove2',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'profile_visibility_hide' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Connection\\UserBundle\\Controller\\UserController::hideAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/user/visibility/hide',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'profile_visibility_show' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Connection\\UserBundle\\Controller\\UserController::showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/user/visibility/show',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'user_delete' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Connection\\UserBundle\\Controller\\UserController::deleteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/user/delete',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_security_login' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Connection\\UserBundle\\Controller\\SecurityController::loginAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/login',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_security_check' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Connection\\UserBundle\\Controller\\SecurityController::checkAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/login_check',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_security_logout' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Connection\\UserBundle\\Controller\\SecurityController::logoutAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/logout',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_profile_show' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Connection\\UserBundle\\Controller\\ProfileController::showAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/profile/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_profile_edit' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Connection\\UserBundle\\Controller\\ProfileController::editAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/profile/edit',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_registration_register' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Connection\\UserBundle\\Controller\\RegistrationController::registerAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/register/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_registration_check_email' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Connection\\UserBundle\\Controller\\RegistrationController::checkEmailAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/register/check-email',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_registration_confirm' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'Connection\\UserBundle\\Controller\\RegistrationController::confirmAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/register/confirm',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_registration_confirmed' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Connection\\UserBundle\\Controller\\RegistrationController::confirmedAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/register/confirmed',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_resetting_request' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\ResettingController::requestAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/resetting/request',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_resetting_send_email' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\ResettingController::sendEmailAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/resetting/send-email',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_resetting_check_email' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\ResettingController::checkEmailAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/resetting/check-email',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_resetting_reset' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\ResettingController::resetAction',  ),  2 =>   array (    '_method' => 'GET|POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/resetting/reset',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_change_password' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\ChangePasswordController::changePasswordAction',  ),  2 =>   array (    '_method' => 'GET|POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/profile/change-password',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_uploader_upload_user' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'oneup_uploader.controller.user:upload',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_uploader/user/upload',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_uploader_upload_event' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'oneup_uploader.controller.event:upload',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_uploader/event/upload',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_uploader_upload_admin' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'oneup_uploader.controller.admin:upload',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_uploader/admin/upload',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_message_inbox' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\MessageBundle\\Controller\\MessageController::inboxAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/message/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_message_sent' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\MessageBundle\\Controller\\MessageController::sentAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/message/sent',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_message_deleted' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\MessageBundle\\Controller\\MessageController::deletedAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/message/deleted',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_message_search' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\MessageBundle\\Controller\\MessageController::searchAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/message/search',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_message_thread_new' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\MessageBundle\\Controller\\MessageController::newThreadAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/message/new',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_message_thread_delete' => array (  0 =>   array (    0 => 'threadId',  ),  1 =>   array (    '_controller' => 'FOS\\MessageBundle\\Controller\\MessageController::deleteAction',  ),  2 =>   array (    '_method' => 'POST|DELETE',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'threadId',    ),    2 =>     array (      0 => 'text',      1 => '/message',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_message_thread_undelete' => array (  0 =>   array (    0 => 'threadId',  ),  1 =>   array (    '_controller' => 'FOS\\MessageBundle\\Controller\\MessageController::undeleteAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/undelete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'threadId',    ),    2 =>     array (      0 => 'text',      1 => '/message',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_message_thread_view' => array (  0 =>   array (    0 => 'threadId',  ),  1 =>   array (    '_controller' => 'FOS\\MessageBundle\\Controller\\MessageController::threadAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'threadId',    ),    1 =>     array (      0 => 'text',      1 => '/message',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'gregwar_captcha.generate_captcha' => array (  0 =>   array (    0 => 'key',  ),  1 =>   array (    '_controller' => 'Gregwar\\CaptchaBundle\\Controller\\CaptchaController::generateCaptchaAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'key',    ),    1 =>     array (      0 => 'text',      1 => '/generate-captcha',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
    );

    /**
     * Constructor.
     */
    public function __construct(RequestContext $context, LoggerInterface $logger = null)
    {
        $this->context = $context;
        $this->logger = $logger;
    }

    public function generate($name, $parameters = array(), $referenceType = self::ABSOLUTE_PATH)
    {
        if (!isset(self::$declaredRoutes[$name])) {
            throw new RouteNotFoundException(sprintf('Unable to generate a URL for the named route "%s" as such route does not exist.', $name));
        }

        list($variables, $defaults, $requirements, $tokens, $hostTokens, $requiredSchemes) = self::$declaredRoutes[$name];

        return $this->doGenerate($variables, $defaults, $requirements, $tokens, $parameters, $name, $referenceType, $hostTokens, $requiredSchemes);
    }
}
