<?php

namespace Proxies\__CG__\Connection\CoreBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Country extends \Connection\CoreBundle\Entity\Country implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'Connection\\CoreBundle\\Entity\\Country' . "\0" . 'id', '' . "\0" . 'Connection\\CoreBundle\\Entity\\Country' . "\0" . 'iso', '' . "\0" . 'Connection\\CoreBundle\\Entity\\Country' . "\0" . 'iso3', '' . "\0" . 'Connection\\CoreBundle\\Entity\\Country' . "\0" . 'fips', '' . "\0" . 'Connection\\CoreBundle\\Entity\\Country' . "\0" . 'name', '' . "\0" . 'Connection\\CoreBundle\\Entity\\Country' . "\0" . 'continent', '' . "\0" . 'Connection\\CoreBundle\\Entity\\Country' . "\0" . 'currencyCode', '' . "\0" . 'Connection\\CoreBundle\\Entity\\Country' . "\0" . 'currencyName', '' . "\0" . 'Connection\\CoreBundle\\Entity\\Country' . "\0" . 'phonePrefix', '' . "\0" . 'Connection\\CoreBundle\\Entity\\Country' . "\0" . 'postal_code', '' . "\0" . 'Connection\\CoreBundle\\Entity\\Country' . "\0" . 'languages', '' . "\0" . 'Connection\\CoreBundle\\Entity\\Country' . "\0" . 'geoNameId', '' . "\0" . 'Connection\\CoreBundle\\Entity\\Country' . "\0" . 'priority', '' . "\0" . 'Connection\\CoreBundle\\Entity\\Country' . "\0" . 'state', '' . "\0" . 'Connection\\CoreBundle\\Entity\\Country' . "\0" . 'profile', '' . "\0" . 'Connection\\CoreBundle\\Entity\\Country' . "\0" . 'event');
        }

        return array('__isInitialized__', '' . "\0" . 'Connection\\CoreBundle\\Entity\\Country' . "\0" . 'id', '' . "\0" . 'Connection\\CoreBundle\\Entity\\Country' . "\0" . 'iso', '' . "\0" . 'Connection\\CoreBundle\\Entity\\Country' . "\0" . 'iso3', '' . "\0" . 'Connection\\CoreBundle\\Entity\\Country' . "\0" . 'fips', '' . "\0" . 'Connection\\CoreBundle\\Entity\\Country' . "\0" . 'name', '' . "\0" . 'Connection\\CoreBundle\\Entity\\Country' . "\0" . 'continent', '' . "\0" . 'Connection\\CoreBundle\\Entity\\Country' . "\0" . 'currencyCode', '' . "\0" . 'Connection\\CoreBundle\\Entity\\Country' . "\0" . 'currencyName', '' . "\0" . 'Connection\\CoreBundle\\Entity\\Country' . "\0" . 'phonePrefix', '' . "\0" . 'Connection\\CoreBundle\\Entity\\Country' . "\0" . 'postal_code', '' . "\0" . 'Connection\\CoreBundle\\Entity\\Country' . "\0" . 'languages', '' . "\0" . 'Connection\\CoreBundle\\Entity\\Country' . "\0" . 'geoNameId', '' . "\0" . 'Connection\\CoreBundle\\Entity\\Country' . "\0" . 'priority', '' . "\0" . 'Connection\\CoreBundle\\Entity\\Country' . "\0" . 'state', '' . "\0" . 'Connection\\CoreBundle\\Entity\\Country' . "\0" . 'profile', '' . "\0" . 'Connection\\CoreBundle\\Entity\\Country' . "\0" . 'event');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Country $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setIso($iso)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIso', array($iso));

        return parent::setIso($iso);
    }

    /**
     * {@inheritDoc}
     */
    public function getIso()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIso', array());

        return parent::getIso();
    }

    /**
     * {@inheritDoc}
     */
    public function setIso3($iso3)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIso3', array($iso3));

        return parent::setIso3($iso3);
    }

    /**
     * {@inheritDoc}
     */
    public function getIso3()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIso3', array());

        return parent::getIso3();
    }

    /**
     * {@inheritDoc}
     */
    public function setFips($fips)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFips', array($fips));

        return parent::setFips($fips);
    }

    /**
     * {@inheritDoc}
     */
    public function getFips()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFips', array());

        return parent::getFips();
    }

    /**
     * {@inheritDoc}
     */
    public function setName($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', array($name));

        return parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', array());

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setContinent($continent)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setContinent', array($continent));

        return parent::setContinent($continent);
    }

    /**
     * {@inheritDoc}
     */
    public function getContinent()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getContinent', array());

        return parent::getContinent();
    }

    /**
     * {@inheritDoc}
     */
    public function setCurrencyCode($currencyCode)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCurrencyCode', array($currencyCode));

        return parent::setCurrencyCode($currencyCode);
    }

    /**
     * {@inheritDoc}
     */
    public function getCurrencyCode()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCurrencyCode', array());

        return parent::getCurrencyCode();
    }

    /**
     * {@inheritDoc}
     */
    public function setCurrencyName($currencyName)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCurrencyName', array($currencyName));

        return parent::setCurrencyName($currencyName);
    }

    /**
     * {@inheritDoc}
     */
    public function getCurrencyName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCurrencyName', array());

        return parent::getCurrencyName();
    }

    /**
     * {@inheritDoc}
     */
    public function setPhonePrefix($phonePrefix)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPhonePrefix', array($phonePrefix));

        return parent::setPhonePrefix($phonePrefix);
    }

    /**
     * {@inheritDoc}
     */
    public function getPhonePrefix()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPhonePrefix', array());

        return parent::getPhonePrefix();
    }

    /**
     * {@inheritDoc}
     */
    public function setPostalCode($postal_code)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPostalCode', array($postal_code));

        return parent::setPostalCode($postal_code);
    }

    /**
     * {@inheritDoc}
     */
    public function getPostalCode()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPostalCode', array());

        return parent::getPostalCode();
    }

    /**
     * {@inheritDoc}
     */
    public function setLanguages($languages)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLanguages', array($languages));

        return parent::setLanguages($languages);
    }

    /**
     * {@inheritDoc}
     */
    public function getLanguages()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLanguages', array());

        return parent::getLanguages();
    }

    /**
     * {@inheritDoc}
     */
    public function setGeoNameId($geoNameId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setGeoNameId', array($geoNameId));

        return parent::setGeoNameId($geoNameId);
    }

    /**
     * {@inheritDoc}
     */
    public function getGeoNameId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getGeoNameId', array());

        return parent::getGeoNameId();
    }

    /**
     * {@inheritDoc}
     */
    public function setPriority($priority)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPriority', array($priority));

        return parent::setPriority($priority);
    }

    /**
     * {@inheritDoc}
     */
    public function getPriority()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPriority', array());

        return parent::getPriority();
    }

    /**
     * {@inheritDoc}
     */
    public function setState($state)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setState', array($state));

        return parent::setState($state);
    }

    /**
     * {@inheritDoc}
     */
    public function getState()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getState', array());

        return parent::getState();
    }

}
