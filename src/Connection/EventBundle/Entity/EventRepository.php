<?php

namespace Connection\EventBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * eventRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class EventRepository extends EntityRepository
{

    public function countAll()
    {
        return $this->createQueryBuilder('e')
            ->select('COUNT(e.id) AS total')
            ->getQuery()
            ->getSingleScalarResult();
    }

    public function getUpcomingEvents( Event $event )
    {
        $countryId  = ($event->getCountry()) ? $event->getCountry()->getId() : false;
        $stateId    = ($event->getState())   ? $event->getState()->getId()   : false;

        $qb = $this->createQueryBuilder('e')
            ->where('e.eventDate > :event_date')
            ->andWhere('e.eventDate > :current_date')
            ->setParameter('event_date', $event->getEventDate(), \Doctrine\DBAL\Types\Type::DATETIME)
            ->setParameter('current_date', new \DateTime(), \Doctrine\DBAL\Types\Type::DATETIME);

        if ($stateId) {
            $qb->join('e.state', 's')
                ->andWhere('s.id = :state_id')
                ->setParameter('state_id', $stateId);
        } elseif ($countryId) {
            $qb->join('e.country', 'c')
                ->andWhere('c.id = :country_id')
                ->setParameter('country_id', $countryId);
        }

        return $qb->getQuery()->getResult();
    }

    public function search( $filter = array(), $limit = false, $offset = false )
    {
        $qb = $this->createQueryBuilder('e');
        if ($limit) {
            $qb->setMaxResults($limit);
        }

        if ($offset) {
            $qb->setFirstResult($offset);
        }

        return $qb->orderBy("e.eventDate", "ASC")->getQuery()->getResult();
    }
}
